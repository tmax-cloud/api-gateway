apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZNVENDQkJtZ0F3SUJBZ0lTQktvV1NXVnMvZms3SjJpaW5uNjUvejV5TUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNVEV3TURFd01qVTBOVFphRncweU1URXlNekF3TWpVME5UVmFNQmd4RmpBVUJnTlZCQU1UCkRYUnRZWGhqYkc5MVpDNXZjbWN3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHEKWjB4Yld6Sm5EbUNxZE1OSnRoZmE0TEZXRmdNamR1YkpIR0tTUy9ITG1HWjg4NGt4OXFERzIvOEQyRVNqKzRZbgp4cHBZSDJFTDNJSHJ1VThlanZMc0M4TVk1Qm5rNzFDK1FNUUJhdFBtaVRKakRHMGJsOHRIZm5ZVjExemVvYXFlCnVWWUNIbThWdkZkQ2xQdnZOa2MwMjJ4VXhqME1CTEY5ZWUwQ0FCYTRBYmlZNUJ3SDQwaDF5M3p6dm5MaUdUeFMKNmRyeE4zcWIwSU1DSnZ4ZVRobUlOSnhyRWlSZGZkekJndXlvKzVqZGlocjluWU1RSVh1YWFGT0N5THNqSndndwpLbW1QSjZSdEtjNUpDZGVJNm1ub29EdDdpNi8wVkpaamttTmxKL3VJNVYxVGFPVGw1QTAwd0V2cnlrM2FsRXlWClpvQlIxRWZYUWErdVRlRWZKRUZ6QWdNQkFBR2pnZ0paTUlJQ1ZUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRlBNVW1jSmN3RU9xTTN3NGVtOHJVWFVrb3Nsck1COEdBMVVkSXdRWU1CYUFGQlF1c3hlM1dGYkxybEFKClFPWWZyNTJMRk1MR01GVUdDQ3NHQVFVRkJ3RUJCRWt3UnpBaEJnZ3JCZ0VGQlFjd0FZWVZhSFIwY0RvdkwzSXoKTG04dWJHVnVZM0l1YjNKbk1DSUdDQ3NHQVFVRkJ6QUNoaFpvZEhSd09pOHZjak11YVM1c1pXNWpjaTV2Y21jdgpNQ2tHQTFVZEVRUWlNQ0NDRHlvdWRHMWhlR05zYjNWa0xtOXlaNElOZEcxaGVHTnNiM1ZrTG05eVp6Qk1CZ05WCkhTQUVSVEJETUFnR0JtZUJEQUVDQVRBM0Jnc3JCZ0VFQVlMZkV3RUJBVEFvTUNZR0NDc0dBUVVGQndJQkZocG8KZEhSd09pOHZZM0J6TG14bGRITmxibU55ZVhCMExtOXlaekNDQVFRR0Npc0dBUVFCMW5rQ0JBSUVnZlVFZ2ZJQQo4QUIzQUpRZ3ZCNk8xWTFzaUhNZmdvc2lMQTNSMmsxZWJFK1VQV0hiVGk5WVRhTENBQUFCZkRuOXBPd0FBQVFECkFFZ3dSZ0loQUpjSEhqU0RpcGl5MTQ1aU9nbSs3MG85NVRaZnFDb1FhQ2dhUk5zNGtSRWlBaUVBelM3TkkxWFoKMjBXYVM5VUtHK3FWOG1SNWtwQ2dmRjhGdGpOTlR3WTQxaFFBZFFEMlhKUXYwWGN3SWhSVUdBZ3dsRmFPNDAwVApHVE8vM3d3dklBdk1UdkZrNHdBQUFYdzUvYVRqQUFBRUF3QkdNRVFDSUJMSkdhdVY3SkJ5OVVoTFBQUW1CU1M4CktteDNNbUZqYXE3YkM4aXhBbEI5QWlCaklvdi9neGNQS05aQ1ZETW8rU0N3WTExM2ZWcGNEQTBvZnplMGFBU2wKanpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9ocnQvR04zZXNveHc1VllrSklGV0g0TnBldUxJdXdjQlVsRgpTYmxQOWw3cEtZa05BczhYMVNwSkN0bnJXOFJHZm1wdzZ2dW5rTW1EOWsvaGpNQ1gxRCtrT1VLYnFBOUFNaXdYCnFEcDdyaGJWT1BKYnZMTDhBSmljdEJUR2g2c0xRMkZXcjVaYVh3d1Nva0hPRWEreWZIc3ZmZUlGb2JpOTVxVUEKM0hlTy9lZkdadFRGRDFxVUlOQ25Fa3crTUtGbDM5VlNFd2t3ZXJBMFZhaWJGRlBBNkpWNkxNMWhkaHFPS01rcwpRdVpwRmhsY2h3OFJQR0lzWWVpR1VFVWRDL0JreGdOTjFSRGhRekFGVHQyQUJpak9QQXJPQ0o1d2dBTk5icXg1CmZEL0R3S25tUTMwdUNhNUlYNDV6TDNja1pTU0NRNld2TDRNcnphcnZ1N2g0ZnZ4SHFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQwpvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMCndZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QKTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250Swo0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1CmJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkKc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WgpYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0CkZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMKU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbApQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EClR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMQpjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4Cit0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIKQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdQpiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFClUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQwo1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXCjlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcKV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TwpoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDCkRmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNm1kTVcxc3ladzVncW5URFNiWVgydUN4VmhZREkzYm15Unhpa2t2eHk1aG1mUE9KCk1mYWd4dHYvQTloRW8vdUdKOGFhV0I5aEM5eUI2N2xQSG83eTdBdkRHT1FaNU85UXZrREVBV3JUNW9reVl3eHQKRzVmTFIzNTJGZGRjM3FHcW5ybFdBaDV2RmJ4WFFwVDc3elpITk50c1ZNWTlEQVN4ZlhudEFnQVd1QUc0bU9RYwpCK05JZGN0ODg3NXk0aGs4VXVuYThUZDZtOUNEQWliOFhrNFppRFNjYXhJa1hYM2N3WUxzcVB1WTNZb2EvWjJECkVDRjdtbWhUZ3NpN0l5Y0lNQ3Bwanlla2JTbk9TUW5YaU9wcDZLQTdlNHV2OUZTV1k1SmpaU2Y3aU9WZFUyamsKNWVRTk5NQkw2OHBOMnBSTWxXYUFVZFJIMTBHdnJrM2hIeVJCY3dJREFRQUJBb0lCQUhSNlBERXhVZ3h2MG8waApWR0Z1Z05BYzAwSkowZWx2amlMbFhmNEFpdmgybEljR3BXZ1VlN1FWWWRWUlJGcVFCQXdEM25KbnRWdWxpVkhQClZZZUQxU2FDZWNJR3B1OWlGQ2RXRzQvd3U3ZFUrWnJLYy9WQUtwMHVOQk9LWHZXcU5CU0hXRHZaVDYzblZ4MFkKMTAvNUVzMHJNOXUwWG1WNGQ1STRZaE9hWTYrdkI4emdUc3RVNnhTZUY5MitBMGc2bEJTLzlaUmpwWURrOGU1OQpqN3YrWEIxYkNXaitNY0F1eFIrc241MkxrMm5jUFlKMVpFOTMwSGdNamYyZy9YRERMb1QzTmF4RlNhMVM4TEpmCk5yWUVFNTdBWkdoY1JMcEZEb2VyVjdtOEFTeXpkdlFmSkttUzQ5ejc4S2x3ZG5YZEkvbTc4eVU4bEVWN2N6R08KMGVVMFpRRUNnWUVBODh1VE5RRDd5RllQdWcyQzhDWXBrU0krYXB2RHpWSVhaTTFtMzJkRzJ1NjZKQnlRcXZDawpSZmNRUUZZREh0azQrVHN6eEdXQTFlOXBrTk1pZlY5TlBNa0VJaloyOWZQMFpWSERFY281NjVoUnFjS1FUL21WCkJEY0t0VkZzYWcxbERZbDZjOXJuSVNGbFBjeFJ3UzdvVXNsN2tRTDZDK2tCMFdyK2U2SllqRE1DZ1lFQTlpTmMKZWZOOWIrc1dWTnpwQ29uRXh1RzJ3WWptYXBOY2JrZy81aTEwODRPTmtPbEdndU1IQytwbG1SeFAxZmFNR0JHNQpHbDJlM3YyN1NCM2FNWjByZ2NxdjUwSVhHRExWSFBTeTRqRWZnanpYMUFRWWo5MDlielBqakVRNG9RYWVsRDdLCnF3VU1jYko2a0k2Tm1oZzBETnhBM1NmVk5Qc296SUZGSm1rME5jRUNnWUVBMWFRbFdVS0dZbFlBckNOaEJqLzcKRnlNeUhVeG85c21rbElKblR3ajdENm82VnFEdHFjNzl0ZzQvSUpIL1pBNHBua2JpSTQ1cnE0NkZMUlBJMnFNawpWVXMyb3lDbGVQMlN3eU0yVmFXb3dpdVdETFRpc0NMZ0VuU0Zuc1UrdzJUL2xEQlFyYXc3OVUyRm9mVW1BNnV1CmpiWGc0Z0FBeldVZ1lidG9UVUhFWlA4Q2dZRUF1UThaSm0rVnJpSDRwbEY1dlh5YndGUlFUZTZhSHlNd2FaSlUKeU1FQW4xNFhnQTZELzBDbU9hVkFRZi94WHBPQi9VN0Y5emJRamlRRFBWT0VpNno1MnhvRGEwSmJqc3daUXk0UAptTlVLTmFkOU5tRGwvclIremk4Yk5Jak9jdk5CSTRDYWJEN2RmbGFNcEVjcDIrTzZycmlpNUNSZ3Z2YmZVL01WCmhLMnduWUVDZ1lBTTNBNnRtTXpncU1tZHdvZHFPQjg5OUkvZzFoWjZVVnd3Qis1SWR4UWVTczdCY3BlbXlpVGYKdkFER0FKZ2djanFKZ1BGTkRBeGFWTnUyMEtydzdIMHVjV2ZDb2Z4dkUxMEh6ejRodjI4VnlrcnNIY0ZoTFlZNQozWHJFOTRUa05ZaVYvL0xKbjRKbGJNdk5rWWdkbWNIOXJvZlJCLzNvQmZZbUZVcnY2YXhTNFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: api-gateway-acme-tmaxcloud
  namespace: cert-manager
type: kubernetes.io/tls

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: ca-issuer-tmax
#  namespace: sandbox
spec:
  ca:
    secretName: api-gateway-acme-tmaxcloud
#  이건 ca라 안됨
#status:
#  conditions:
#    - lastTransitionTime: "2021-10-15T06:20:26Z"
#      message: 'Error getting keypair for CA issuer: certificate is not a CA'
#      reason: ErrInvalidKeyPair
#      status: "False"
#      type: Ready